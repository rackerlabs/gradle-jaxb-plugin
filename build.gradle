group = 'com.github.seanrl'
def baseVersion = '2.5.1'
//version = project.hasProperty('release') ? baseVersion : "$baseVersion-SNAPSHOT"
version = '2.5.1'
description = "Gradle plugin to ease development with XSD's using the jaxb ant task"

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.gradle.publish:plugin-publish-plugin:0.11.0'
        classpath 'com.netflix.nebula:gradle-git-scm-plugin:3.0.1'
        classpath 'gradle.plugin.org.ysb33r.gradle:gradletest:1.1'
        classpath 'gradle.plugin.org.openrepose:gradle-codacy-plugin:1.0.0'
    }
}

apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'nebula.gradle-git-scm'
apply plugin: 'org.ysb33r.gradletest'
apply plugin: 'jacoco'
apply plugin: 'org.openrepose.gradle.plugins.codacy'

repositories {
    jcenter()
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.7

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.codehaus.groovy:groovy-all:2.4.12'
    compile 'org.slf4j:slf4j-api:1.7.6'
    compile 'com.google.inject:guice:3.0'
    compile 'com.google.inject.extensions:guice-assistedinject:3.0'

    //testCompile 'org.spockframework:spock-core:0.7-groovy-1.8' // v1.12
    //testCompile 'org.spockframework:spock-core:1.0-groovy-2.3' // v2.0 - v2.7
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'   // v2.8 - v2.10
    testCompile 'cglib:cglib-nodep:2.2'
    testCompile 'org.objenesis:objenesis:1.2'

    gradleTest 'org.glassfish.jaxb:jaxb-xjc:2.2.11'
    gradleTest 'org.glassfish.jaxb:jaxb-runtime:2.2.11'

}

// NOTE:    The gradle.publish.key and gradle.publish.secret need added to your ~/.gradle/gradle.properties as per the
//          instructions located at https://plugins.gradle.org/docs/submit
pluginBundle {
    website = 'https://github.com/seanrl/gradle-jaxb-plugin'
    vcsUrl = 'https://github.com/seanrl/gradle-jaxb-plugin'
    description = project.description
    tags = ['jaxb', 'xsd', 'xjc']

    plugins {
        gradleJaxbPlugin {
            id = 'com.github.seanrl.jaxb'
            displayName = 'Gradle JAXB plugin'
        }
    }

    mavenCoordinates {
        groupId = "com.github.seanrl"
        artifactId = "jaxb-plugin"
        version = "$project.version"
    }
}


task('tagVersion', description: 'Tag the repository with the current version.', group: 'release') {
    doLast {
        scmFactory.create().tag(version)
    }
}

task('release', description: 'Release the project and publish to public repo.', group: 'release', dependsOn: [test, publish, tagVersion, publishPlugins])

task unversionedJar(type: Jar, dependsOn: 'jar') {
    version = null
    from sourceSets.main.output
}

task installPlugin(type: Copy, dependsOn: 'unversionedJar') {
    def gradleInstallDir = gradle.gradleHomeDir
    group = 'installation'
    description = 'Installs the plugin jar in your gradle distribution.'
    from "${buildDir}/libs/${unversionedJar.archiveName}"
    into "/${gradleInstallDir}/lib/plugins"
    doLast {
        println "Installed in: ${gradleInstallDir}/lib/plugins as: ${unversionedJar.archiveName}"
    }
}

task uninstallPlugin(type: Delete) {
    def gradleInstallDir = gradle.gradleHomeDir
    group = 'installation'
    description = 'Removes the plugin from your gradle distribution.'
    delete("/${gradleInstallDir}/lib/plugins/${unversionedJar.archiveName}")
}

task copyJarfile(type: Copy) {
    dependsOn jar
    from(jar)
    into("${project.buildDir}/gradleTest/repo/")
}

tasks.withType(Groovydoc).all { enabled = false }

gradleTest {
    dependsOn copyJarfile

    versions '2.0', '2.1', '2.2', '2.3', '2.4', '2.5', '2.6', '2.7', '2.8', '2.9'
    versions '2.10', '2.11', '2.12', '2.13', '2.14.1'
    versions '3.0', '3.1', '3.2.1', '3.3', '3.4.1', '3.5.1'
    versions '4.0', '4.1', '4.2', '4.3.1', '4.4'
    versions '4.5'

    beforeTest {
        println "  ${it.name}"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
